openapi: 3.0.3
info:
  title: SimpleTwitter
  description: Simple REST API for service like a Twitter
  version: 1.0.0
servers:
- url: /
paths:
  /users:
    summary: Users interface
    description: It is an interface to manage users
    get:
      tags:
      - USERS
      description: Gets user by user ID
      operationId: GetUser
      parameters:
      - name: minUserId
        in: query
        description: Minimal User ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: maxUserId
        in: query
        description: Maximal User ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "404":
          description: User not found
          content: {}
      security:
      - apiKey: []
    post:
      tags:
      - USERS
      description: Adds new user
      operationId: AddUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
          content: {}
        "403":
          description: Cannot add new user
          content: {}
      security:
      - apiKey: []
    delete:
      tags:
      - USERS
      description: Delete User by ID
      operationId: DeleteUser
      parameters:
      - name: userId
        in: query
        description: User ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content: {}
        "403":
          description: Cannot delete an user
          content: {}
      security:
      - apiKey: []
  /users/{authorId}/tweets:
    summary: Tweets by Author interface
    get:
      tags:
      - TWEETS
      description: Gets Tweets by Author ID
      operationId: GetTweetByAuthorId
      parameters:
      - name: authorId
        in: path
        description: Author's user ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tweet'
                x-content-type: application/json
        "400":
          description: Invalid Author ID
          content: {}
  /tweets:
    summary: Tweets interface
    post:
      tags:
      - TWEETS
      description: Adds new Tweet
      operationId: AddTweet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tweet'
        required: true
      responses:
        "200":
          description: Successful operation
          content: {}
        "403":
          description: Cannot add new tweet
          content: {}
      security:
      - apiKey: []
  /tweets/{tweetID}:
    summary: Tweets by ID interface
    get:
      tags:
      - TWEETS
      description: Gets Tweet by Tweet ID
      operationId: GetTweet
      parameters:
      - name: tweetID
        in: path
        description: Tweet unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        "404":
          description: Tweet is not found
          content: {}
    put:
      tags:
      - TWEETS
      description: Update Tweet by its ID
      operationId: UpdateTweet
      parameters:
      - name: tweetID
        in: path
        description: Tweet unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tweet'
        required: true
      responses:
        "200":
          description: Successful operation
          content: {}
        "403":
          description: Cannot add update tweet
          content: {}
      security:
      - apiKey: []
    delete:
      tags:
      - TWEETS
      description: Delete Tweet by its ID
      operationId: DeleteTweet
      parameters:
      - name: tweetID
        in: path
        description: Tweet unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content: {}
        "403":
          description: Cannot delete a tweet
          content: {}
      security:
      - apiKey: []
  /tweets/{tweetID}/likes:
    summary: Likes by Tweet ID interface
    get:
      tags:
      - LIKES
      description: Gets likes by Tweet ID
      operationId: GetLikeByTweetID
      parameters:
      - name: tweetID
        in: path
        description: Tweet unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
        "405":
          description: Invalid Tweet ID
          content: {}
    post:
      tags:
      - LIKES
      description: Adds like to Tweet by Tweet ID
      operationId: SetLikeByTweetID
      parameters:
      - name: tweetID
        in: path
        description: Tweet unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content: {}
        "405":
          description: Invalid Tweet ID
          content: {}
      security:
      - apiKey: []
    delete:
      tags:
      - LIKES
      description: Delete Tweet by its ID
      operationId: DeleteLikeByTweetID
      parameters:
      - name: tweetID
        in: path
        description: Tweet unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content: {}
        "405":
          description: Cannot delete a like
          content: {}
      security:
      - apiKey: []
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        nickname:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      example:
        password: password
        firstname: firstname
        nickname: nickname
        id: 0
        email: email
        lastname: lastname
    Tweet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        authorId:
          type: integer
          format: int64
        text:
          type: string
        createdDateTimestamp:
          type: integer
          format: int64
      example:
        createdDateTimestamp: 1
        id: 0
        text: text
        authorId: 6
    Like:
      type: object
      properties:
        tweetId:
          type: integer
          format: int64
        value:
          type: integer
          format: int64
      example:
        value: 6
        tweetId: 0
  securitySchemes:
    apiKey:
      type: apiKey
      name: apiKey
      in: header
